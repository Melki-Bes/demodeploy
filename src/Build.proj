<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
         DefaultTargets="Compile">
  <PropertyGroup>
    <!-- Configurations -->
	<CONFIGURATION Condition="$(CONFIGURATION) == ''">release</CONFIGURATION>
    <PLATFORM>AnyCPU</PLATFORM>
    <DEFINE_SOLUTION_PROPERTIES>false</DEFINE_SOLUTION_PROPERTIES>
	
	<!-- Settings -->
	<TESTS_RUN Condition="$(RUN_TESTS) == ''">false</TESTS_RUN>
	<TESTS_CATEGORY></TESTS_CATEGORY>
	<!-- Tests are succesfull? 1 = fail | 0 = ok -->
	<TESTS_SUCCESS>1</TESTS_SUCCESS>
	<!-- Version number settings (the complete version number in the task) -->
	<ASSEMBLY_MAYOR_VERSION>1</ASSEMBLY_MAYOR_VERSION>
	<ASSEMBLY_MINOR_VERSION>1</ASSEMBLY_MINOR_VERSION>
	<ASSEMBLY_BUILD_NUMBER Condition="$(ASSEMBLY_BUILD_NUMBER) == ''">1</ASSEMBLY_BUILD_NUMBER>
	<ASSEMBLY_TIME_VERSION>1</ASSEMBLY_TIME_VERSION>
    <!-- Negative number equal infinity -->
    <STYLECOP_MAX_VIOLATION_COUNT>-1</STYLECOP_MAX_VIOLATION_COUNT>
    <STYLECOP_VIOLATION_COUNT></STYLECOP_VIOLATION_COUNT>
	
    <!-- General paths -->
    <ROOT_PATH>$(MSBuildProjectDirectory)\..</ROOT_PATH>
    <SRC_PATH>$(ROOT_PATH)\src</SRC_PATH>
    <REPORTS_PATH>$(ROOT_PATH)\results</REPORTS_PATH>
	<COVERAGE_PATH>$(REPORTS_PATH)\coverage</COVERAGE_PATH>
	<PACKAGES_PATH>$(SRC_PATH)\packages</PACKAGES_PATH>
	<MSBUILD_EXTENSION_PATH>$(PACKAGES_PATH)\MSBuild.Extension.Pack.1.5.0\tools\net40</MSBUILD_EXTENSION_PATH>
	<MSTEST_RUNNER_PATH>$(VS120COMNTOOLS)..\Ide\MSTest.exe</MSTEST_RUNNER_PATH>
	<MSTEST_RESULT_PATH>$(REPORTS_PATH)\results.trx</MSTEST_RESULT_PATH>
	<OPENCOVER_RUNNER_PATH>$(PACKAGES_PATH)\OpenCover.4.5.2506\OpenCover.Console.exe</OPENCOVER_RUNNER_PATH>
	<OPENCOVER_RESULT_PATH>$(REPORTS_PATH)\coverage-output.xml</OPENCOVER_RESULT_PATH>
   	<REPORTGENERATOR_RUNNER_PATH>$(PACKAGES_PATH)\ReportGenerator.1.9.1.0\ReportGenerator.exe</REPORTGENERATOR_RUNNER_PATH>
	<REPORTGENERATOR_RESULT_PATH>$(COVERAGE_PATH)</REPORTGENERATOR_RESULT_PATH>
	<STYLECOP_PATH>$(PACKAGES_PATH)\StyleCop.MSBuild.4.7.49.0</STYLECOP_PATH>
	<STYLECOP_RESULT_PATH>$(REPORTS_PATH)\styelcop.xml</STYLECOP_RESULT_PATH>
	
	<!-- Commands -->
	<OPENCOVER_COMMAND>&quot;$(OPENCOVER_RUNNER_PATH)&quot; -register:user -target:&quot;$(MSTEST_RUNNER_PATH)&quot; -targetargs:&quot;@(TEST_ASSEMBLIES->'/testcontainer:&quot;%(FullPath)&quot;', ' ') /category:$(TESTS_CATEGORY) /resultsfile:&quot;$(MSTEST_RESULT_PATH)&quot;&quot; -output:&quot;$(OPENCOVER_RESULT_PATH)&quot;</OPENCOVER_COMMAND>
	<MSTEST_COMMAND>&quot;$(MSTEST_RUNNER_PATH)&quot; @(TEST_ASSEMBLIES->'/testcontainer:&quot;%(FullPath)&quot;', ' ') /category:&quot;$(TESTS_CATEGORY)&quot; /resultsfile:&quot;$(MSTEST_RESULT_PATH)&quot;</MSTEST_COMMAND>
    <REPORTGENERATOR_COMMAND>&quot;$(REPORTGENERATOR_RUNNER_PATH)&quot; -reports:&quot;$(OPENCOVER_RESULT_PATH)&quot; -targetdir:&quot;$(REPORTGENERATOR_RESULT_PATH)&quot; -reporttypes:Html,HtmlSummary</REPORTGENERATOR_COMMAND>
  </PropertyGroup>

  <ItemGroup>
    <PROJECT_FILES Include="**\*.csproj" />
	<ASSEMBLY_INFO_FILES Include="**\AssemblyInfo.cs"/>
	<TEST_PROJECTS Include="$(SRC_PATH)\demodeploy.Tests\demodeploy.Tests.csproj" />
	<TEST_ASSEMBLIES Include="$(SRC_PATH)\**\bin\$(CONFIGURATION)\*.Tests.dll" />
	<NUGET_CONFIGS Include="$(MSBuildStartupDirectory)\**\packages.config" />
	<STYLECOP_FILES Include="$(SRC_PATH)\**\*.cs" Exclude="$(SRC_PATH)\**\*.designer.cs;$(SRC_PATH)\**Test*\**\*.*;" />
  </ItemGroup>
  
  <!-- Import msbuild extension pack -->
  <Import Condition="exists('$(MSBUILD_EXTENSION_PATH)\MSBuild.ExtensionPack.VersionNumber.targets')" Project="$(MSBUILD_EXTENSION_PATH)\MSBuild.ExtensionPack.VersionNumber.targets"/>
  <UsingTask AssemblyFile="$(MSBUILD_EXTENSION_PATH)\MSBuild.ExtensionPack.dll" TaskName="MSBuild.ExtensionPack.Framework.DateAndTime"/>
  <!-- Import stylecop -->
  <Import Condition="exists('$(STYLECOP_PATH)\build\StyleCop.MSBuild.Targets')" Project="$(STYLECOP_PATH)\build\StyleCop.MSBuild.Targets"/>
	
  <!-- Compile target --> 
  <Target Name="Compile" DependsOnTargets="LoadNuGetPackages;SetAssemblyVersion;ValidateStylecop">
    <Message Importance="high" Text="Compiling all projects: @(PROJECT_FILES)"/>
    <MSBuild Projects="@(PROJECT_FILES)"
             Properties="Configuration=$(CONFIGURATION);Platform=$(PLATFORM)"
             BuildInParallel="true" />    
  </Target>
  
  <!-- Run MStest -s target -->
  <Target Name="MsTests">
	<Message Importance="high" Text="Running MsTest from these categories: $(TESTS_CATEGORY)" />
	<Exec Command="$(MSTEST_COMMAND)" >
	  <Output TaskParameter="ExitCode" PropertyName="TESTS_SUCCESS"/>
	</Exec>
  </Target>
  
  <!-- Run OpenCover based code coverage, then generate report -->
  <Target Name="CodeCoverage">
    <Message Importance="high" Text="Running opencover test from these categories: $(TESTS_CATEGORY)" />
	<Exec Command="$(OPENCOVER_COMMAND)">
	  <Output TaskParameter="ExitCode" PropertyName="TESTS_SUCCESS"/>
	</Exec>
	<Message Importance="high" Text="Generate coverage result: $(REPORTGENERATOR_RESULT_PATH)" />
	<Exec Command="$(REPORTGENERATOR_COMMAND)">
	</Exec>
  </Target>
  
  <!-- Clean the source code projects -->
  <Target Name="Clean">
    <Message Importance="high" Text="Cleaning projects"/>
    <MSBuild Projects="@(PROJECT_FILES)"
             ContinueOnError="false"
             Targets="Clean"
             Properties="Configuration=$(CONFIGURATION)" />
  </Target>
  
  <!-- Clean and create new report dirs -->
  <Target Name="CleanReports">
    <Message Importance="high" Text="Cleaning reports"/>
    <RemoveDir Directories="$(REPORTS_PATH)" Condition="Exists('$(REPORTS_PATH)')" />
	<RemoveDir Directories="$(SRC_PATH)\TestResults" Condition="Exists('$(SRC_PATH)\TestResults')" />
    <MakeDir Directories = "$(REPORTS_PATH);$(COVERAGE_PATH)" />
  </Target>

  <!-- Clean packages files -->
  <Target Name="CleanPackages">
    <Message Importance="high" Text="Cleaning NuGet packages files"/>
    <RemoveDir Directories="$(PACKAGES_PATH)" Condition="Exists('$(PACKAGES_PATH)')" />
  </Target>

  <!-- Clean Everything -->
  <Target Name="NewBorn" DependsOnTargets="Clean;CleanReports;CleanPackages">
  </Target>
  
  <!-- Load NuGet packages target -->
  <Target Name="LoadNuGetPackages">
    <Message Importance="high" Text="Retrieving packages for %(NUGET_CONFIGS.Identity)" />
    <Exec Command="&quot;$(SRC_PATH)\.nuget\nuget&quot; install &quot;%(NUGET_CONFIGS.Identity)&quot; -o &quot;$(PACKAGES_PATH)&quot;" />
  </Target>	
 
  <!-- Set version and assembly information -->
  <Target Name="SetAssemblyVersion">
    <!-- call current date time -->
    <MSBuild.ExtensionPack.Framework.DateAndTime TaskAction="Get" Format="HHmm">
      <Output TaskParameter="Result" PropertyName="ASSEMBLY_TIME_VERSION"/>
    </MSBuild.ExtensionPack.Framework.DateAndTime>
	
	<!-- generate the version number, it will be local variable, because the global variables can not be task to write  -->
    <PropertyGroup>
	  <ASSEMBLY_VERSION>$(ASSEMBLY_MAYOR_VERSION).$(ASSEMBLY_MINOR_VERSION).$(ASSEMBLY_BUILD_NUMBER).$(ASSEMBLY_TIME_VERSION)</ASSEMBLY_VERSION>
	</PropertyGroup>
  
    <!-- set the version number -->
    <Message Importance="high" Text="Set version numer to: $(ASSEMBLY_VERSION)"/>
    <AssemblyInfo 
	  AssemblyInfoFiles="@(ASSEMBLY_INFO_FILES)"
      AssemblyCompany="Acme Co."
      AssemblyProduct="Demo deploy"
      AssemblyCopyright="Copyright Â© 2014 Kundl Richard, All Rights Reserved."
      ComVisible="false"
      AssemblyVersion="$(ASSEMBLY_VERSION)"
      AssemblyFileVersion="$(ASSEMBLY_VERSION)" />
  </Target>

  <!-- Validate stylecop errors -->
  <Target Name="ValidateStylecop">
    <Message Importance="high" Text="Running stylcop validation" />
    <StyleCopTask
      ProjectFullPath="$(SRC_PATH)"
      SourceFiles="@(STYLECOP_FILES)"
      ForceFullAnalysis="true"
      CacheResults="false"
      OverrideSettingsFile="&quot;$(SRC_PATH))\Settings.StyleCop&quot;"
      OutputFile="$(STYLECOP_RESULT_PATH)"
      TreatErrorsAsWarnings="true"
      MaxViolationCount="$(STYLECOP_MAX_VIOLATION_COUNT)">
      <Output TaskParameter="ViolationCount" PropertyName="STYLECOP_VIOLATION_COUNT" />
    </StyleCopTask>
    <Message Importance="high" Text="Finished stylecop validation: $(STYLECOP_VIOLATION_COUNT) errors found."/>
  </Target>
  
</Project>
